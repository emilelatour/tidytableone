% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_tidy_table_one_checkbox.R
\name{create_tidy_table_one_checkbox}
\alias{create_tidy_table_one_checkbox}
\title{Create tidy Table 1 with checkbox variables}
\usage{
create_tidy_table_one_checkbox(
  data,
  strata = NULL,
  vars,
  na_level = "(Missing)",
  b_replicates = 2000,
  checkbox = NULL,
  checkbox_opts = list(denom = "group", pvals = "per_level", test = "auto", p_adjust =
    "none", show_any = TRUE, note =
    "Participants could select more than one option; percentages may exceed 100\%."),
  ...
)
}
\arguments{
\item{data}{A data frame or tibble containing the variables to be summarized.}

\item{strata}{Character vector of the stratifying (grouping) variable.}

\item{vars}{Character vector of the variable names to be summarized. If
empty, then all variables in the given data frame are used.}

\item{na_level}{Character string of the text to replace \code{NA} in the strata
variable, if any exist.}

\item{b_replicates}{an integer specifying the number of replicates used in
the Monte Carlo test for Fisher's Exact test and Chi-square test.}

\item{checkbox}{A tibble with columns:
\itemize{
\item \code{var} — checkbox variable name in \code{data} (e.g., \code{"race___1"}).
\item \code{overall_lbl} — Label for the collapsed group in Table 1
(e.g., \code{"Race"}).
\item \code{checkbox_lbl} — Label for the individual checkbox level
(e.g., \code{"White"}).
\item \code{checkbox_txt} — Text used to indicate selection (e.g., \code{"Checked"}).
}}

\item{checkbox_opts}{A list controlling checkbox processing. Can include:
\describe{
\item{denom}{Character: \code{"group"} or \code{"overall"} denominator.}
\item{pvals}{Logical: whether to show p-values.}
\item{test}{Test type for categorical variables (\code{"chisq"}, \code{"fisher"}).}
\item{p_adjust}{Adjustment method for p-values.}
\item{show_any}{Logical: whether to add an "Any selected" row.}
\item{note}{Character: note text to include.}
}}

\item{...}{Additional arguments passed to \code{\link[=create_tidy_table_one]{create_tidy_table_one()}}.}
}
\value{
A tibble in the same format as \code{\link[=create_tidy_table_one]{create_tidy_table_one()}}.
}
\description{
This is a wrapper for \code{\link[=create_tidy_table_one]{create_tidy_table_one()}} that supports
multi-select (checkbox) variables, such as REDCap checkboxes.
}
\details{
This function first calls \code{\link[=create_tidy_table_one]{create_tidy_table_one()}} to produce the
standard Table 1, then expands and relabels multi-select (checkbox)
variables so each selection appears as a separate row.

\strong{Example \code{checkbox} tibble:}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{tibble::tribble(
  ~var, ~overall_lbl, ~checkbox_lbl, ~checkbox_txt,
  "race___1", "Race", "White", "Checked",
  "race___2", "Race", "Black or African-American", "Checked"
)
}\if{html}{\out{</div>}}
}
\examples{
# Minimal smoke test (always runs quickly)
set.seed(123)
tiny <- tibble::tibble(
  group = sample(c("A","B"), 20, TRUE),
  gender = sample(c("Female","Male"), 20, TRUE),
  age = sample(18:80, 20, TRUE),
  race___1 = sample(c("Checked","Unchecked"), 20, TRUE),
  race___2 = sample(c("Checked","Unchecked"), 20, TRUE)
)

create_tidy_table_one_checkbox(
  data = tiny,
  strata = "group",
  vars = c("gender","age","race___1","race___2"),
  checkbox = tibble::tribble(
    ~var,       ~overall_lbl, ~checkbox_lbl, ~checkbox_txt,
    "race___1", "Race",       "White",       "Checked",
    "race___2", "Race",       "Black",       "Checked"
  )
)

\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Larger, fully worked example (runs only in interactive sessions)
set.seed(42)
df2 <- tibble(
  record_id = 1:100,
  gender = sample(c("Female", "Male"), 100, TRUE),
  age = sample(18:85, 100, TRUE),
  education = sample(c("High-school", "College", "Graduate school"), 100, TRUE),
  ethnicity = sample(c("Hispanic", "Non-hispanic"), 100, TRUE),
  income = sample(20000:120000, 100, TRUE),
  marital_status = sample(c("Married", "Single"), 100, TRUE),
  group = sample(c("Treatment", "Control"), 100, TRUE),
  key = sample(paste0("race___", c(1:6, 98)), 100, TRUE),
  value = "Checked"
) \%>\%
  mutate(key = factor(key, levels = paste0("race___", c(1:6, 98)))) \%>\%
  spread(key, value) \%>\%
  mutate(across(starts_with("race___"), ~ replace_na(., "Unchecked")))

# Checkbox mapping
cb_map <- tribble(
  ~var,        ~overall_lbl, ~checkbox_lbl,                              ~checkbox_txt,
  "race___1",  "Race",       "White",                                    "Checked",
  "race___2",  "Race",       "Black or African-American",                "Checked",
  "race___3",  "Race",       "American Indian or Alaska Native",         "Checked",
  "race___4",  "Race",       "Asian",                                    "Checked",
  "race___5",  "Race",       "Native Hawaiian or Pacific Islander",      "Checked",
  "race___6",  "Race",       "Other",                                    "Checked",
  "race___98", "Race",       "Prefer not to answer",                     "Checked"
)

# Basic table with checkboxes
create_tidy_table_one_checkbox(
  data = df2,
  strata = "group",
  vars = c("gender", "age", "education", "ethnicity", "income", "marital_status",
           paste0("race___", c(1:6, 98))),
  checkbox = cb_map
)

# With variable labels
df2_labelled <- set_variable_labels(
  df2,
  gender = "Gender", age = "Age (years)", education = "Education",
  ethnicity = "Ethnicity", income = "Income", marital_status = "Marital status",
  race___1 = "Race (White)", race___2 = "Race (Black)", race___3 = "Race (American Indian)",
  race___4 = "Race (Asian)", race___5 = "Race (Native Hawaiian)", race___6 = "Race (Other)",
  race___98 = "Race (Prefer not to answer)"
)

create_tidy_table_one_checkbox(
  data = df2_labelled,
  strata = "group",
  vars = c("gender", "age", "education", "ethnicity", "income", "marital_status",
           paste0("race___", c(1:6, 98))),
  checkbox = cb_map
)

\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=create_tidy_table_one]{create_tidy_table_one()}}
}
